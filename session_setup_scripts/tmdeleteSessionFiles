#!/usr/bin/bash
# --------------------------------------------------
#   Kills tmux server ending all sessions          |
#   Prompts user to delete SESSION_FILE_NAME files |
# -------------------------<robaylard@gmail.com>---

ui_decoration() {
  source "../ui_components/ui_components.sh"
  border_line 50
  ui_button_printf "TMUX-Session-Killer"
  printf "\n"
}

# Returns:
#   list of all running tmux sessions
#   The F formats `tmux list-sessions` so only the session name shows and not all
#     the other window stuff. (see man tmux)
list_sessions() {
  list_sessions=$(tmux list-sessions -F "#{session_name}")
}

# Deletes session setup files one by one if a session is running for that file
# Kills the tmux server ending all sessions
delete_session_setup_files() {
  list_sessions
  for session in $list_sessions; do
    SESSION_FILE_NAME="../session_names/tm$session"
    if [[ -f "${SESSION_FILE_NAME}" ]]; then
      prompt_user
    fi
  done
  border_line
  tmux kill-server 2>/dev/null
}

prompt_user() {
  printf "Delete session setup file:${bold}${italic}${green} %s${normal}\n" \
    "$(basename "${SESSION_FILE_NAME}")"
  while true; do
    read -n1 -s -r
    case "${REPLY}" in
    [yY])
      rm "${SESSION_FILE_NAME}"
      printf "${italic}File ${bold}${underline}${red}%s${normal}\n" "Deleted"
      break
      ;;
    [nN])
      printf "${italic}File ${bold}${underline}${blue}%s${normal}\n" "Saved"
      break
      ;;
    *) echo "enter y or n" ;;
    esac
  done
}

# Returns:
#   this scripts directory path and cd into it
#   Need this in order for relative paths to work
get_cwd_for_relative_paths() {
  SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
  cd "${SCRIPT_DIR}" || exit
}

main() {
  get_cwd_for_relative_paths
  ui_decoration
  delete_session_setup_files
}
# Run main ONLY if there ARE tmux sessions running
[[ -n $(tmux ls) ]] && main
